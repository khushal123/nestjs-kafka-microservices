services:
  api:
    build:
      context: ./api/.
      dockerfile: Dockerfile
    container_name: api
    ports:
      - 4001:4001
    volumes:
      - "./api/:/workspace/api"
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9094:9094
   
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,localhost://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,localhost://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,localhost:PLAINTEXT

  database:
    image: postgres
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    env_file:
      - .env

  topics:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
      - database
    command: >+
      bash -c
        "sleep 5s && 
        kafka-topics --create --topic=taskrunner --if-not-exists --bootstrap-server=kafka:9092 &&
        kafka-topics --create --topic=taskstatus --if-not-exists --bootstrap-server=kafka:9092"
